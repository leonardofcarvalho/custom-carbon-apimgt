<%
include("/jagg/jagg.jag");
var getAllSubscriptions = function (username, selectedAppName, startSubIndex, endSubIndex)  {
    var result,
            log = new Log(),
            store = jagg.module("manager").getAPIStoreObj();
    try {
			var groupingId = session.get("groupId");
			result = store.getAllSubscriptions(username , selectedAppName, String(startSubIndex), String(endSubIndex),groupingId);
			if (log.isDebugEnabled()) {
				log.debug("getAllSubscriptions : " + stringify(result));
		}
        return {
            error:false,
            result:result
        };
    } catch (e) {username
        log.error(e);
        return {
            error:e,
            result:null
        };
    }
};

var getAPISubscriptions = function (api, username) {
    var subscriptions,
            log = new Log(),
            store = jagg.module("manager").getAPIStoreObj();

    try {
        var groupingId = session.get("groupId");
        subscriptions = store.getSubscriptions(api.provider, api.name, api.version, username, groupingId);
        if (log.isDebugEnabled()) {
            log.debug("getSubscriptions : " + stringify(subscriptions));
        }
        return {
            error:false,
            subscriptions:subscriptions
        };
    } catch (e) {
        log.error(e.message);
        return {
            error:e,
            subscriptions:null
        };
    }
};

var getAPISubscriptionsForApplication = function (username, appName) {
    var subscriptions,
            log = new Log(),
            store = jagg.module("manager").getAPIStoreObj();

    try {
        var groupingId = session.get("groupId");
        subscriptions = store.getSubscriptionsByApplication(appName, username, groupingId);
        if (log.isDebugEnabled()) {
            log.debug("getSubscriptions : " + stringify(subscriptions));
        }
        return {
            error:false,
            subscriptions:subscriptions
        };
    } catch (e) {
        log.error(e.message);
        return {
            error : e,
            subscriptions:null
        };
    }
};

var generateClientSdk = function (appName,language,userName,groupId){
    var sdkGen = Packages.org.wso2.carbon.apimgt.impl.clientGen;
    var generator = new sdkGen();
    <!--window.open("wso2.com");-->
    var object = generator.sdkGeneration(appName,language,userName,groupId);
    if(object == null){
        response.status = 500;
    }else{
        response.contentType = "application/force-download";
        response.addHeader("Content-Disposition","attachment; filename = \""+object.name+"\"");
        print(object);
        new Log().info("++++++++++++++ : " + object);
    }
    return {
        archive:object,
        error:false
    };
};
%>
